# Generated by Django 4.2.6 on 2023-10-21 03:16

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('created_date', models.DateTimeField(editable=False, verbose_name='Created date')),
                ('modified_date', models.DateTimeField(verbose_name='Modification Date')),
                ('game_pk', models.AutoField(db_column='game_pk', help_text='Primary key of the table', primary_key=True, serialize=False, verbose_name='Primary key of the table')),
                ('game_id', models.BigIntegerField(help_text='Game identifier', verbose_name='Game')),
                ('game_platform_id', models.CharField(help_text='Game plataform identifier', max_length=255, verbose_name='Platform')),
                ('game_year', models.IntegerField(help_text='Game year', verbose_name='Year')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('created_date', models.DateTimeField(editable=False, verbose_name='Created date')),
                ('modified_date', models.DateTimeField(verbose_name='Modification Date')),
                ('league_pk', models.AutoField(db_column='league_pk', help_text='Primary key of the table', primary_key=True, serialize=False, verbose_name='Primary key of the table')),
                ('league_id', models.BigIntegerField(help_text='Id League', verbose_name='Id League')),
                ('league_name', models.CharField(help_text='Name of the league', max_length=255, verbose_name='League name')),
                ('league_slug', models.SlugField(help_text='Slug of the league', max_length=255, verbose_name='Slug')),
                ('league_sport', models.CharField(help_text='Sport of the league', max_length=6, verbose_name='Sport')),
                ('league_image', models.SlugField(help_text='Image of the league', max_length=500, verbose_name='Image of the league')),
                ('league_light_image', models.ImageField(help_text='Light Image of the league', max_length=255, upload_to='', verbose_name='Light Image')),
                ('league_dark_image', models.ImageField(help_text='Dark Image of the league', max_length=255, upload_to='', verbose_name='Dark Image of the league')),
                ('league_region', models.CharField(help_text='Region of the league', max_length=255, verbose_name='Region')),
                ('league_priority', models.IntegerField(default=0, help_text='Priority of the league', verbose_name='Priority')),
                ('league_display_priority_position', models.IntegerField(help_text='Display priority position', verbose_name='Display priority position')),
                ('league_display_priority_status', models.BooleanField(help_text='Display priority status', verbose_name='Display Priority Status')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('created_date', models.DateTimeField(editable=False, verbose_name='Created date')),
                ('modified_date', models.DateTimeField(verbose_name='Modification Date')),
                ('match_pk', models.AutoField(db_column='match_pk', help_text='Primary key of the table', primary_key=True, serialize=False, verbose_name='Primary key of the table')),
                ('match_type', models.CharField(help_text='Match type', max_length=255, verbose_name='Type')),
                ('match_state', models.CharField(help_text='Match state', max_length=255, verbose_name='State')),
                ('match_mode', models.CharField(help_text='Match mode', max_length=255, verbose_name='Mode')),
                ('match_strategy', models.CharField(help_text='Match strategy', max_length=255, verbose_name='Strategy')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('created_date', models.DateTimeField(editable=False, verbose_name='Created date')),
                ('modified_date', models.DateTimeField(verbose_name='Modification Date')),
                ('player_pk', models.AutoField(db_column='player_pk', help_text='Primary key of the table', primary_key=True, serialize=False, verbose_name='Primary key of the table')),
                ('player_id', models.BigIntegerField(help_text='Player identifier', verbose_name='Player')),
                ('team_id', models.BigIntegerField(blank=True, help_text='Team ForeignKey', null=True, verbose_name='Team')),
                ('player_handle', models.CharField(help_text='Player handle', max_length=16, verbose_name='Handle')),
                ('player_name', models.CharField(help_text='Player name', max_length=255, verbose_name='Name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('created_date', models.DateTimeField(editable=False, verbose_name='Created date')),
                ('modified_date', models.DateTimeField(verbose_name='Modification Date')),
                ('team_pk', models.AutoField(db_column='team_pk', help_text='Primary key of the table', primary_key=True, serialize=False, verbose_name='Primary key of the table')),
                ('team_id', models.BigIntegerField(help_text='Team ForeignKey', verbose_name='Team')),
                ('team_name', models.CharField(help_text='Team name', max_length=255, verbose_name='Name')),
                ('team_acronym', models.CharField(help_text='Team acronym', max_length=255, verbose_name='Acronym')),
                ('team_slug', models.SlugField(help_text='Team slug', max_length=255, verbose_name='Slug')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('created_date', models.DateTimeField(editable=False, verbose_name='Created date')),
                ('modified_date', models.DateTimeField(verbose_name='Modification Date')),
                ('tournament_pk', models.AutoField(db_column='tournament_pk', help_text='Primary key of the table', primary_key=True, serialize=False, verbose_name='Primary key of the table')),
                ('tournament_id', models.BigIntegerField(help_text='Tournament ForeignKey', verbose_name='Tournament Id')),
                ('tournament_name', models.CharField(help_text='Tournament name', max_length=255, verbose_name='Name')),
                ('tournament_slug', models.SlugField(help_text='Tournament slug', max_length=255, verbose_name='Slug')),
                ('tournament_sport', models.CharField(help_text='Tournament sport', max_length=255, verbose_name='Sport')),
                ('tournament_start_date', models.DateField(help_text='Tournament start date', verbose_name='Start Date')),
                ('tournament_end_date', models.DateField(help_text='Tournament end date', verbose_name='End Date')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('created_date', models.DateTimeField(editable=False, verbose_name='Created date')),
                ('modified_date', models.DateTimeField(verbose_name='Modification Date')),
                ('stage_pk', models.AutoField(db_column='stage_pk', help_text='Primary key of the table', primary_key=True, serialize=False, verbose_name='Primary key of the table')),
                ('stage_name', models.CharField(help_text='Stage name', max_length=255, verbose_name='Stage')),
                ('stage_type', models.CharField(help_text='Stage type', max_length=255, verbose_name='Type')),
                ('stage_slug', models.CharField(help_text='Stage slug', max_length=255, verbose_name='Slug')),
                ('tournament_id', models.ForeignKey(db_column='tournament_id', help_text='Tournament ForeignKey', null=True, on_delete=django.db.models.deletion.CASCADE, to='base.tournament', verbose_name='Tournament')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('created_date', models.DateTimeField(editable=False, verbose_name='Created date')),
                ('modified_date', models.DateTimeField(verbose_name='Modification Date')),
                ('section_pk', models.AutoField(db_column='section_pk', help_text='Primary key of the table', primary_key=True, serialize=False, verbose_name='Primary key of the table')),
                ('section_name', models.CharField(help_text='Section name', max_length=255, verbose_name='Section')),
                ('stage_id', models.ForeignKey(db_column='stage_pk', help_text='Stage ForeignKey', on_delete=django.db.models.deletion.CASCADE, to='base.stage', verbose_name='Stage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MatchDetail',
            fields=[
                ('created_date', models.DateTimeField(editable=False, verbose_name='Created date')),
                ('modified_date', models.DateTimeField(verbose_name='Modification Date')),
                ('match_detail_pk', models.AutoField(db_column='match_detail_pk', help_text='Primary key of the table', primary_key=True, serialize=False, verbose_name='Primary key of the table')),
                ('match_detail_match_team_integrant', models.BooleanField(default=False, help_text='Match team integrants with integrants table?', verbose_name='Match Integrant')),
                ('match_detail_win', models.BooleanField(help_text='Win the game?', verbose_name='Win Game?')),
                ('match_id', models.ForeignKey(help_text='Match ForeignKey', on_delete=django.db.models.deletion.CASCADE, to='base.match', verbose_name='Match')),
                ('team_id', models.ForeignKey(help_text='Team identifier', on_delete=django.db.models.deletion.CASCADE, to='base.team', verbose_name='Team')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='match',
            name='section_id',
            field=models.ForeignKey(db_column='section_pk', help_text='Section ForeignKey', on_delete=django.db.models.deletion.CASCADE, to='base.section', verbose_name='Section Detail'),
        ),
        migrations.CreateModel(
            name='GameDetail',
            fields=[
                ('created_date', models.DateTimeField(editable=False, verbose_name='Created date')),
                ('modified_date', models.DateTimeField(verbose_name='Modification Date')),
                ('game_detail_pk', models.AutoField(db_column='game_detail_pk', help_text='Primary key of the table', primary_key=True, serialize=False, verbose_name='Primary key of the table')),
                ('player_id', models.BigIntegerField(db_column='player_id', help_text='Player identifier', verbose_name='Player')),
                ('game_detail_player_match', models.BooleanField(default=False, help_text='Player match with the player table?', verbose_name='Player equal to player table')),
                ('game_id', models.ForeignKey(db_column='game_id', help_text='Game identifier', on_delete=django.db.models.deletion.CASCADE, to='base.game', verbose_name='Game')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
